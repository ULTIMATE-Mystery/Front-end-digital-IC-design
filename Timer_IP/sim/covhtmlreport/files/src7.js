var g_data = {"name":"../rtl/timer_counter.v","src":"module timer_counter (\r\n    // System signals\r\n    input wire clk,\r\n    input wire rst_n,\r\n\r\n    // Control signals\r\n    input wire timer_en,\r\n    input wire cnt_en,\r\n    input wire tdr0_wr_en,\r\n    input wire tdr1_wr_en,\r\n    input wire [63:0] TDR,\r\n\r\n    // Counter interface\r\n    input wire [63:0] tcmp,\r\n    output reg [63:0] cnt_val,\r\n    output wire cmp_match\r\n);\r\n\r\n    wire  cnt_init;\r\n    reg   delay_timer_en;\r\n    reg   delay_tdr0_wr_en, delay_tdr1_wr_en;\r\n\r\n    assign cnt_init = ~timer_en & delay_timer_en;\r\n    assign cmp_match = (cnt_val == tcmp);\r\n\r\n    // Counter implementation\r\n    always @(posedge clk or negedge rst_n) begin\r\n        if (!rst_n || cnt_init) begin\r\n            cnt_val <= 0;\r\n        end else if (!delay_tdr0_wr_en && !delay_tdr1_wr_en && cnt_en && timer_en) begin\r\n            cnt_val <= cnt_val + 1;\r\n        end\r\n    end\r\n\r\n    always @(posedge clk or negedge rst_n) begin\r\n        if (!rst_n) begin\r\n            delay_timer_en <= 1'b0;\r\n        end else begin\r\n            delay_timer_en <= timer_en;\r\n        end\r\n    end\r\n\r\n    always @(posedge clk or negedge rst_n) begin\r\n        if (!rst_n) begin\r\n            delay_tdr0_wr_en <= 1'b0;\r\n            delay_tdr1_wr_en <= 1'b0;\r\n        end else begin\r\n            delay_tdr0_wr_en <= tdr0_wr_en;\r\n            delay_tdr1_wr_en <= tdr1_wr_en;\r\n        end\r\n    end\r\n\r\n    always @(*) begin\r\n        if (delay_tdr0_wr_en) begin\r\n            cnt_val [31:0] = TDR [31:0];\r\n        end else if (delay_tdr1_wr_en) begin\r\n            cnt_val [63:32] = TDR [63:32]; \r\n        end\r\n    end\r\n\r\nendmodule\r\n","lang":"verilog"};
processSrcData(g_data);