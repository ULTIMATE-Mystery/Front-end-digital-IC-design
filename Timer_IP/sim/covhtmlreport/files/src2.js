var g_data = {"name":"run_test.v","src":"task run_test;\r\n    begin\r\n        $display(\"===================================\");\r\n        $display(\"Test Case: Unaligned Access Check\");\r\n        $display(\"===================================\");\r\n\r\n        sys_reset();\r\n\r\n        // Start APB transaction with unaligned address\r\n        tim_psel = 1'b1;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b1;\r\n        tim_paddr = 12'h001;\r\n        tim_pwdata = 32'hFFFF_FFFF;\r\n        tim_pstrb = 4'hF;\r\n        $display(\"t = %0t [TB WRITE]: addr=0x%h data=%h strb=%b\", $time, tim_paddr, tim_pwdata, tim_pstrb);\r\n        @(posedge sys_clk);\r\n        \r\n        // Assert penable\r\n        tim_penable = 1'b1;\r\n        \r\n        // Complete the transaction\r\n        wait (tim_pready);\r\n        #1;\r\n        if (tim_pslverr == 1'b0) begin\r\n            $display(\"t = %0t PASS: pslverr is not asserted\", $time);\r\n        end else begin\r\n            $display(\"t = %0t FAIL: pslverr is asserted\", $time);\r\n            test_passed = 1'b0;\r\n        end\r\n        \r\n        @(posedge sys_clk);\r\n        tim_psel = 1'b0;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b0;\r\n        @(posedge sys_clk);\r\n\r\n        apb_rd_chk(12'h001, 32'h0000_0000);\r\n\r\n        // Start APB transaction with unaligned address\r\n        tim_psel = 1'b1;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b1;\r\n        tim_paddr = 12'h002;\r\n        tim_pwdata = 32'hFFFF_FFFF;\r\n        tim_pstrb = 4'hF;\r\n        $display(\"t = %0t [TB WRITE]: addr=0x%h data=%h strb=%b\", $time, tim_paddr, tim_pwdata, tim_pstrb);\r\n        @(posedge sys_clk);\r\n        \r\n        // Assert penable\r\n        tim_penable = 1'b1;\r\n        \r\n        // Complete the transaction\r\n        wait (tim_pready);\r\n        #1;\r\n        if (tim_pslverr == 1'b0) begin\r\n            $display(\"t = %0t PASS: pslverr is not asserted\", $time);\r\n        end else begin\r\n            $display(\"t = %0t FAIL: pslverr is asserted\", $time);\r\n            test_passed = 1'b0;\r\n        end\r\n        \r\n        @(posedge sys_clk);\r\n        tim_psel = 1'b0;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b0;\r\n        @(posedge sys_clk);\r\n\r\n        apb_rd_chk(12'h002, 32'h0000_0000);\r\n    \r\n        // Start APB transaction with unaligned address\r\n        tim_psel = 1'b1;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b1;\r\n        tim_paddr = 12'h006;\r\n        tim_pwdata = 32'hFFFF_FFFF;\r\n        tim_pstrb = 4'hF;\r\n        $display(\"t = %0t [TB WRITE]: addr=0x%h data=%h strb=%b\", $time, tim_paddr, tim_pwdata, tim_pstrb);\r\n        @(posedge sys_clk);\r\n        \r\n        // Assert penable\r\n        tim_penable = 1'b1;\r\n        \r\n        // Complete the transaction\r\n        wait (tim_pready);\r\n        #1;\r\n        if (tim_pslverr == 1'b0) begin\r\n            $display(\"t = %0t PASS: pslverr is not asserted\", $time);\r\n        end else begin\r\n            $display(\"t = %0t FAIL: pslverr is asserted\", $time);\r\n            test_passed = 1'b0;\r\n        end\r\n        \r\n        @(posedge sys_clk);\r\n        tim_psel = 1'b0;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b0;\r\n        @(posedge sys_clk);\r\n\r\n        apb_rd_chk(12'h006, 32'h0000_0000);\r\n\r\n        // Start APB transaction with unaligned address\r\n        tim_psel = 1'b1;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b1;\r\n        tim_paddr = 12'h013;\r\n        tim_pwdata = 32'hFFFF_FFFF;\r\n        tim_pstrb = 4'hF;\r\n        $display(\"t = %0t [TB WRITE]: addr=0x%h data=%h strb=%b\", $time, tim_paddr, tim_pwdata, tim_pstrb);\r\n        @(posedge sys_clk);\r\n        \r\n        // Assert penable\r\n        tim_penable = 1'b1;\r\n        \r\n        // Complete the transaction\r\n        wait (tim_pready);\r\n        #1;\r\n        if (tim_pslverr == 1'b0) begin\r\n            $display(\"t = %0t PASS: pslverr is not asserted\", $time);\r\n        end else begin\r\n            $display(\"t = %0t FAIL: pslverr is asserted\", $time);\r\n            test_passed = 1'b0;\r\n        end\r\n        \r\n        @(posedge sys_clk);\r\n        tim_psel = 1'b0;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b0;\r\n        @(posedge sys_clk);\r\n\r\n        apb_rd_chk(12'h00b, 32'h0000_0000);\r\n\r\n        // Start APB transaction with unaligned address\r\n        tim_psel = 1'b1;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b1;\r\n        tim_paddr = 12'h001;\r\n        tim_pwdata = 32'hFFFF_FFFF;\r\n        tim_pstrb = 4'hF;\r\n        $display(\"t = %0t [TB WRITE]: addr=0x%h data=%h strb=%b\", $time, tim_paddr, tim_pwdata, tim_pstrb);\r\n        @(posedge sys_clk);\r\n        \r\n        // Assert penable\r\n        tim_penable = 1'b1;\r\n        \r\n        // Complete the transaction\r\n        wait (tim_pready);\r\n        #1;\r\n        if (tim_pslverr == 1'b0) begin\r\n            $display(\"t = %0t PASS: pslverr is not asserted\", $time);\r\n        end else begin\r\n            $display(\"t = %0t FAIL: pslverr is asserted\", $time);\r\n            test_passed = 1'b0;\r\n        end\r\n        \r\n        @(posedge sys_clk);\r\n        tim_psel = 1'b0;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b0;\r\n        @(posedge sys_clk);\r\n\r\n        apb_rd_chk(12'h013, 32'h0000_0000);\r\n\r\n        // Start APB transaction with unaligned address\r\n        tim_psel = 1'b1;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b1;\r\n        tim_paddr = 12'h01a;\r\n        tim_pwdata = 32'hFFFF_FFFF;\r\n        tim_pstrb = 4'hF;\r\n        $display(\"t = %0t [TB WRITE]: addr=0x%h data=%h strb=%b\", $time, tim_paddr, tim_pwdata, tim_pstrb);\r\n        @(posedge sys_clk);\r\n        \r\n        // Assert penable\r\n        tim_penable = 1'b1;\r\n        \r\n        // Complete the transaction\r\n        wait (tim_pready);\r\n        #1;\r\n        if (tim_pslverr == 1'b0) begin\r\n            $display(\"t = %0t PASS: pslverr is not asserted\", $time);\r\n        end else begin\r\n            $display(\"t = %0t FAIL: pslverr is asserted\", $time);\r\n            test_passed = 1'b0;\r\n        end\r\n        \r\n        @(posedge sys_clk);\r\n        tim_psel = 1'b0;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b0;\r\n        @(posedge sys_clk);\r\n\r\n        apb_rd_chk(12'h01a, 32'h0000_0000);\r\n\r\n        // Start APB transaction with unaligned address\r\n        tim_psel = 1'b1;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b1;\r\n        tim_paddr = 12'h020;\r\n        tim_pwdata = 32'hFFFF_FFFF;\r\n        tim_pstrb = 4'hF;\r\n        $display(\"t = %0t [TB WRITE]: addr=0x%h data=%h strb=%b\", $time, tim_paddr, tim_pwdata, tim_pstrb);\r\n        @(posedge sys_clk);\r\n        \r\n        // Assert penable\r\n        tim_penable = 1'b1;\r\n        \r\n        // Complete the transaction\r\n        wait (tim_pready);\r\n        #1;\r\n        if (tim_pslverr == 1'b0) begin\r\n            $display(\"t = %0t PASS: pslverr is not asserted\", $time);\r\n        end else begin\r\n            $display(\"t = %0t FAIL: pslverr is asserted\", $time);\r\n            test_passed = 1'b0;\r\n        end\r\n        \r\n        @(posedge sys_clk);\r\n        tim_psel = 1'b0;\r\n        tim_penable = 1'b0;\r\n        tim_pwrite = 1'b0;\r\n        @(posedge sys_clk);\r\n\r\n        apb_rd_chk(12'h020, 32'h0000_0000);\r\n\r\n    end\r\nendtask","lang":"verilog"};
processSrcData(g_data);