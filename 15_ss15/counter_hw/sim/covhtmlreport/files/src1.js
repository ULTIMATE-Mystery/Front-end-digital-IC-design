var g_data = {"name":"../tb/test_bench.v","src":"\n`timescale 1ns/1ns\n\nmodule test_bench;\n  	reg clk,rst_n;\n	reg	count_en, count_clr;\n  	wire [7:0] count;\n  	wire overflow;\n\n  	counter dut(\n  		.clk		(clk		),\n  	  .rst_n		(rst_n	),\n  	  .count_en		(count_en	),\n  	  .count_clr	(count_clr	),\n  	  .count  		(count  	),\n  	  .overflow		(overflow 	)\n  	 );\n			\n  	initial begin \n  	  clk = 0;\n  	  forever #10 clk = ~clk;\n  	end\n\n  	initial begin\n  	  rst_n = 1'b0;\n  	  #10 rst_n = 1'b1;\n  	end\n\n	initial begin\n		count_en = 1'b0;\n		count_clr = 1'b0;\n		#100;\n		if( count != 8'h00 ) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: the init value of counter is not 8'h00\",$time);\n			$display(\"------------------------------------------------\");\n		    #100;\n		    $finish;\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: the init value of counter is 8'h00.\", $stime);\n			$display(\"------------------------------------------------\");\n\n		end\n		#10;\n		@(posedge clk);\n		count_en = 1'b1;\n		repeat (256) begin\n			@(posedge clk);\n		end\n		if( count != 8'hff ) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: counter value is not correct, count = %2h , expect: 8'hff\",$stime,count);\n			$display(\"------------------------------------------------\");\n		    #100;\n		    $finish;\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: counter value is correct,8'hff\",$stime);\n			$display(\"------------------------------------------------\");\n		end\n\n		if( overflow != 1'b1) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: overflow is not asserted\",$stime);\n			$display(\"------------------------------------------------\");\n		    #100;\n		    $finish;\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: overflow is asserted\",$stime);\n			$display(\"------------------------------------------------\");\n		end\n		@(posedge clk);\n		if( overflow == 1'b1) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: overflow is not negated\",$stime);\n			$display(\"------------------------------------------------\");\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: overflow is negated\",$stime);\n			$display(\"------------------------------------------------\");\n		end\n		if( count != 8'h00 ) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: counter value is not init to 8'h00 after overflow. count = %2h , expect: 8'h00\",$stime, count);\n			$display(\"------------------------------------------------\");\n		    #100;\n		    $finish;\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: counter value is 8'h00 after overflow\",$stime);\n			$display(\"------------------------------------------------\");\n		end\n\n		repeat (10) begin\n			@(posedge clk);\n		end\n		if( count != 8'ha ) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: counter value is not correct, count = %2h , expect: 8'ha\",$stime,count);\n			$display(\"------------------------------------------------\");\n		    #100;\n		    $finish;\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: counter value is correct - 8'ha\",$stime);\n			$display(\"------------------------------------------------\");\n		end\n\n		//count_en = 1'b0;\n		//repeat (10) begin\n		//	@(posedge clk);\n		//end\n		//	\n		//if( count != 8'hb ) begin\n		//	$display(\"------------------------------------------------\");\n		//	$display(\"t=%10d FAIL: counter value is not stopped when count_en = 0, count = %2h , expect: 8'hb\",$stime,count);\n		//	$display(\"------------------------------------------------\");\n		//end else begin\n		//	$display(\"------------------------------------------------\");\n		//	$display(\"t=%10d PASS: counter value is stopped when count_en = 0\",$stime);\n		//	$display(\"------------------------------------------------\");\n		//end\n\n		count_clr = 1'b1;\n		\n		//@(posedge clk);\n		//count_clr = 1'b0;\n		@(posedge clk);\n        #1;\n		if( count != 8'h0 ) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: counter value is not cleared when count_clr = 1'b1\",$stime); \n			$display(\"------------------------------------------------\");\n		    #100;\n		    $finish;\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: counter value is cleared when count_clr is 1'b1\",$stime); \n			$display(\"------------------------------------------------\");\n		end\n	\n		repeat (10) begin\n			@(posedge clk);\n		end\n\n		if( count != 8'h0 ) begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d FAIL: counter start counting even if counter_en is 1'b0\",$stime); \n			$display(\"------------------------------------------------\");\n		    #100;\n		    $finish;\n		end else begin\n			$display(\"------------------------------------------------\");\n			$display(\"t=%10d PASS: counter does not start counting when counter_en is 1'b0\",$stime); \n			$display(\"------------------------------------------------\");\n		end\n\n\n		#100;\n		$finish;\n\n\n	end\n\n  	//initial \n  	//  $monitor(\"Time = %t: reset = %0b, count = %0d, overflow = %0b\",$stime,reset,count,overflow);\nendmodule\n","lang":"verilog"};
processSrcData(g_data);