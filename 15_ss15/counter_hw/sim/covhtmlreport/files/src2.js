var g_data = {"name":"../rtl/counter.v","src":"module counter(\n    input wire clk,\n    input wire rst_n,\n    input wire count_en,\n    input wire count_clr,\n    output reg [7:0] count,\n    output wire overflow\n);\n\n// Counting logic in always block\nalways @(posedge clk or negedge rst_n) begin\n    if (!rst_n || count_clr) begin\n        count <= 8'h00;  // Reset count when rst_n is low or count_clr is high\n    end else if (count_en) begin\n        count <= (count == 8'hFF) ? 8'h00 : count + 1'b1;  // Increment and reset when count reaches max\n    end\nend\n\n// Overflow is asserted when count reaches 8'hFF\nassign overflow = (count == 8'hFF);\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);